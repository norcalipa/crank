# Copyright (c) 2024 Isaac Adams
# Licensed under the MIT License. See LICENSE file in the project root for full license information.
name: Build Image

on:
  workflow_run:
    workflows: [ "Build Base Image" ]
    types:
      - completed
    branches:
      - main

  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'seeds/**'
      - 'dump/**'
      - 'k8s/**'
      - '!.github/workflows/build-image.yml'
      - '.gitignore'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT_ID: crank-404520
  SERVICE: crank
  REGION: us-west1
  ARTIFACT_REPO: crank-repository
  NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}

jobs:
  build-image:
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if triggered by workflow_run and workflow was successful
        if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo "The triggering workflow did not succeed. Skipping build."
          exit 1

      - name: Set environment variables from .env-prod
        id: env-vars
        run: |
          set -a
          source .env-prod
          set +a
          echo "env_vars=$(cat .env-prod | grep -v '^#' | xargs)" >> $GITHUB_OUTPUT

      - name: Authenticate with GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Container to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ env.SERVICE }}:${{ github.sha }}
          build-args: ${{ steps.env-vars.outputs.env_vars }}
          
      - name: Create deployment marker
        run: |
          echo "Image build completed successfully" > /tmp/build_complete
          echo ${{ github.sha }} >> /tmp/build_complete