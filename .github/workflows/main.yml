name: Deploy to Google Cloud

on:
  workflow_run:
    workflows: [ "Run Tests" ]
    types:
      - completed

env:
  PROJECT_ID: crank-404520
  SERVICE: crank
  REGION: us-west1
  ARTIFACT_REPO: crank-repository

jobs:
  deploy:
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - id: 'test'
        name: Test with pytest
        env:
          ENV: dev
        run: |
          pytest

        # Alternative option - authentication via credentials json
      - id: 'auth'
        name: 'Authenticate with Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: 'Authenticate with Google Cloud Artifact Registry'
        uses: 'docker/login-action@v3'
        with:
          username: '_json_key'
          password: '${{ secrets.GCP_CREDENTIALS }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      - name: 'Build and Push Container'
        id: 'build-image'
        uses: 'docker/build-push-action@v3'
        with:
          push: true
          tags: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}:${{ github.sha }}'
          # NOTE: If using a pre-built image, update the image name here
          # tags: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}'

      - name: 'Deploy to Cloud Run'
        id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          env_vars: |
            ENV=prod
            DB_HOST=aws.connect.psdb.cloud
            DB_NAME=crank
          secrets: |
            DB_USER=DB_USER:latest
            DB_PASS=DB_PASS:latest
            SECRET_KEY=SECRET_KEY:latest

          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          # NOTE: If using a pre-built image, update the image name here
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}:${{ github.sha }}'

      # If required, use the Cloud Run url output in later steps
      - name: 'Show Output'
        run: 'echo ${{ steps.deploy.outputs.url }}'
