name: Deploy to Google Cloud

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: crank-404520
  GAR_LOCATION: us-west1
  SERVICE: crank
  REGION: us-west1
  ARTIFACT_REPO: crank-repository

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        # Alternative option - authentication via credentials json
      - id: 'auth'
        name: 'Authenticate with Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: 'Authenticate with Google Cloud Artifact Registry'
        uses: 'docker/login-action@v3'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: 'Install PlanetScale CLI'
        run: |
          curl -L https://github.com/planetscale/cli/releases/latest/download/pscale-cli-linux-amd64 -o pscale
          chmod +x pscale
          sudo mv pscale /usr/local/bin/

      - name: 'Log in to PlanetScale'
        run: |
          echo ${{ secrets.PSCALE_TOKEN }} | pscale auth login

      - name: 'Connect to PlanetScale database'
        run: |
          pscale connect my-database main

      - name: 'Build and Push Container'
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: 'Deploy to Cloud Run'
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: 'Show Output'
        run: echo ${{ steps.deploy.outputs.url }}