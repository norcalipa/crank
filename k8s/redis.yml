# Copyright (c) 2024 Isaac Adams
# Licensed under the MIT License. See LICENSE file in the project root for full license information.
---
apiVersion: v1
kind: Namespace
metadata:
  name: crank
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: crank
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  clusterIP: None  # Headless service
  selector:
    app: redis
---
apiVersion: apps/v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: crank
data:
  redis.conf: |
    # Redis configuration
    bind 0.0.0.0
    port 6379
    dir /data
    appendonly yes
    # Conditional replication configuration
    {{- if eq .Env.REDIS_ROLE "slave" }}
    slaveof redis-master 6379
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: crank
  labels:
    app: redis
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7.0.5-alpine
          ports:
            - containerPort: 6379
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: REDIS_ROLE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['role']
          command: [ "redis-server", "/etc/redis/redis.conf" ]
          volumeMounts:
            - name: redis-storage
              mountPath: /data
            - name: redis-config-storage
              mountPath: /etc/redis
              subPath: redis.conf
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: redis-config-volume
          configMap:
            name: redis-config
            items:
              - key: redis.conf
                path: redis.conf